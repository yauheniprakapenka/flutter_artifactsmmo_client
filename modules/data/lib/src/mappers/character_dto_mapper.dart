import 'package:domain/domain.dart';

import '../dto/character_dto.dart';
import '../dto/inventory_item_dto.dart';

extension CharacterDtoMapper on CharacterDto {
  Character get asDomain {
    return Character(
      amuletSlot: amuletSlot,
      artifact1Slot: artifact1Slot,
      artifact2Slot: artifact2Slot,
      artifact3Slot: artifact3Slot,
      attackAir: attackAir,
      attackEarth: attackEarth,
      attackFire: attackFire,
      attackWater: attackWater,
      bodyArmorSlot: bodyArmorSlot,
      bootsSlot: bootsSlot,
      consumable1Slot: consumable1Slot,
      consumable1SlotQuantity: consumable1SlotQuantity,
      consumable2Slot: consumable2Slot,
      consumable2SlotQuantity: consumable2SlotQuantity,
      cookingLevel: cookingLevel,
      cookingMaxXp: cookingMaxXp,
      cookingXp: cookingXp,
      cooldown: cooldown,
      cooldownExpiration: cooldownExpiration.toLocal(),
      criticalStrike: criticalStrike,
      dmgAir: dmgAir,
      dmgEarth: dmgEarth,
      dmgFire: dmgFire,
      dmgWater: dmgWater,
      fishingLevel: fishingLevel,
      fishingMaxXp: fishingMaxXp,
      fishingXp: fishingXp,
      gearcraftingLevel: gearcraftingLevel,
      gearcraftingMaxXp: gearcraftingMaxXp,
      gearcraftingXp: gearcraftingXp,
      gold: gold,
      haste: haste,
      helmetSlot: helmetSlot,
      hp: hp,
      inventoryMaxItems: inventoryMaxItems,
      jewelrycraftingLevel: jewelrycraftingLevel,
      jewelrycraftingMaxXp: jewelrycraftingMaxXp,
      jewelrycraftingXp: jewelrycraftingXp,
      legArmorSlot: legArmorSlot,
      level: level,
      maxXp: maxXp,
      miningLevel: miningLevel,
      miningMaxXp: miningMaxXp,
      miningXp: miningXp,
      name: name,
      resAir: resAir,
      resEarth: resEarth,
      resFire: resFire,
      resWater: resWater,
      ring1Slot: ring1Slot,
      ring2Slot: ring2Slot,
      shieldSlot: shieldSlot,
      skin: skin,
      speed: speed,
      stamina: stamina,
      task: task,
      taskProgress: taskProgress,
      taskTotal: taskTotal,
      taskType: taskType,
      totalXp: totalXp,
      weaponcraftingLevel: weaponcraftingLevel,
      weaponcraftingMaxXp: weaponcraftingMaxXp,
      weaponcraftingXp: weaponcraftingXp,
      weaponSlot: weaponSlot,
      woodcuttingLevel: woodcuttingLevel,
      woodcuttingMaxXp: woodcuttingMaxXp,
      woodcuttingXp: woodcuttingXp,
      x: x,
      xp: xp,
      y: y,
      inventory: inventory.map((InventoryItemDto e) {
        return InventoryItem(
          slot: e.slot,
          code: e.code,
          quantity: e.quantity,
        );
      }).toList(),
    );
  }
}
